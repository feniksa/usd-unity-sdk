//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdSkelBinding : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UsdSkelBinding(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdSkelBinding obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UsdSkelBinding() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          USDIPCPINVOKE.delete_UsdSkelBinding(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public UsdSkelBinding() : this(USDIPCPINVOKE.new_UsdSkelBinding__SWIG_0(), true) {
  }

  public UsdSkelBinding(UsdSkelSkeleton skel, SWIGTYPE_p_VtArrayT_UsdSkelSkinningQuery_t skinningQueries) : this(USDIPCPINVOKE.new_UsdSkelBinding__SWIG_1(UsdSkelSkeleton.getCPtr(skel), SWIGTYPE_p_VtArrayT_UsdSkelSkinningQuery_t.getCPtr(skinningQueries)), true) {
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdSkelSkeleton GetSkeleton() {
    UsdSkelSkeleton ret = new UsdSkelSkeleton(USDIPCPINVOKE.UsdSkelBinding_GetSkeleton(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_VtArrayT_UsdSkelSkinningQuery_t GetSkinningTargets() {
    SWIGTYPE_p_VtArrayT_UsdSkelSkinningQuery_t ret = new SWIGTYPE_p_VtArrayT_UsdSkelSkinningQuery_t(USDIPCPINVOKE.UsdSkelBinding_GetSkinningTargets(swigCPtr), false);
    return ret;
  }

}

}
