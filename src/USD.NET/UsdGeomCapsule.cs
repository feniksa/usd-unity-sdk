//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdGeomCapsule : UsdGeomGprim {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal UsdGeomCapsule(global::System.IntPtr cPtr, bool cMemoryOwn) : base(USDIPCPINVOKE.UsdGeomCapsule_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdGeomCapsule obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UsdGeomCapsule() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          USDIPCPINVOKE.delete_UsdGeomCapsule(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public UsdGeomCapsule(UsdPrim prim) : this(USDIPCPINVOKE.new_UsdGeomCapsule__SWIG_0(UsdPrim.getCPtr(prim)), true) {
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdGeomCapsule() : this(USDIPCPINVOKE.new_UsdGeomCapsule__SWIG_1(), true) {
  }

  public UsdGeomCapsule(UsdSchemaBase schemaObj) : this(USDIPCPINVOKE.new_UsdGeomCapsule__SWIG_2(UsdSchemaBase.getCPtr(schemaObj)), true) {
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public new static TfTokenVector GetSchemaAttributeNames(bool includeInherited) {
    TfTokenVector ret = new TfTokenVector(USDIPCPINVOKE.UsdGeomCapsule_GetSchemaAttributeNames__SWIG_0(includeInherited), false);
    return ret;
  }

  public new static TfTokenVector GetSchemaAttributeNames() {
    TfTokenVector ret = new TfTokenVector(USDIPCPINVOKE.UsdGeomCapsule_GetSchemaAttributeNames__SWIG_1(), false);
    return ret;
  }

  public new static UsdGeomCapsule Get(UsdStageWeakPtr stage, SdfPath path) {
    UsdGeomCapsule ret = new UsdGeomCapsule(USDIPCPINVOKE.UsdGeomCapsule_Get(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdGeomCapsule Define(UsdStageWeakPtr stage, SdfPath path) {
    UsdGeomCapsule ret = new UsdGeomCapsule(USDIPCPINVOKE.UsdGeomCapsule_Define(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute GetHeightAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_GetHeightAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateHeightAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateHeightAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateHeightAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateHeightAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateHeightAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateHeightAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetRadiusAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_GetRadiusAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateRadiusAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateRadiusAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateRadiusAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateRadiusAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateRadiusAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateRadiusAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetAxisAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_GetAxisAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateAxisAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateAxisAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateAxisAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateAxisAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateAxisAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateAxisAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public new UsdAttribute GetExtentAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_GetExtentAttr(swigCPtr), true);
    return ret;
  }

  public new UsdAttribute CreateExtentAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateExtentAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new UsdAttribute CreateExtentAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateExtentAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new UsdAttribute CreateExtentAttr() {
    UsdAttribute ret = new UsdAttribute(USDIPCPINVOKE.UsdGeomCapsule_CreateExtentAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public static bool ComputeExtent(double height, double radius, TfToken axis, VtVec3fArray extent) {
    bool ret = USDIPCPINVOKE.UsdGeomCapsule_ComputeExtent__SWIG_0(height, radius, TfToken.getCPtr(axis), VtVec3fArray.getCPtr(extent));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool ComputeExtent(double height, double radius, TfToken axis, GfMatrix4d transform, VtVec3fArray extent) {
    bool ret = USDIPCPINVOKE.UsdGeomCapsule_ComputeExtent__SWIG_1(height, radius, TfToken.getCPtr(axis), GfMatrix4d.getCPtr(transform), VtVec3fArray.getCPtr(extent));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
