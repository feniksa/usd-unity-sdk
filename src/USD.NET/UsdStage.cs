//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdStage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal UsdStage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdStage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UsdStage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          USDIPCPINVOKE.delete_UsdStage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static UsdStage CreateNew(string identifier, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_0(identifier, (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_1(identifier);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, SdfLayerHandle sessionLayer, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_2(identifier, SdfLayerHandle.getCPtr(sessionLayer), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, SdfLayerHandle sessionLayer) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_3(identifier, SdfLayerHandle.getCPtr(sessionLayer));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_4(identifier, SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_5(identifier, SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_6(identifier, ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateNew(string identifier, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateNew__SWIG_7(identifier, ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_0((int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    return ret;
  }

  public static UsdStage CreateInMemory() {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_1();
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_2(identifier, (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_3(identifier);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_4(identifier, ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_5(identifier, ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, SdfLayerHandle sessionLayer, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_6(identifier, SdfLayerHandle.getCPtr(sessionLayer), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, SdfLayerHandle sessionLayer) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_7(identifier, SdfLayerHandle.getCPtr(sessionLayer));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_8(identifier, SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage CreateInMemory(string identifier, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_CreateInMemory__SWIG_9(identifier, SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(string filePath, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_0(filePath, (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(string filePath) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_1(filePath);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(string filePath, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_2(filePath, ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(string filePath, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_3(filePath, ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(string filePath, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_0(filePath, UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(string filePath, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_1(filePath, UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(string filePath, ArResolverContext pathResolverContext, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_2(filePath, ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(string filePath, ArResolverContext pathResolverContext, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_3(filePath, ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_4(SdfLayerHandle.getCPtr(rootLayer), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_5(SdfLayerHandle.getCPtr(rootLayer));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_6(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_7(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_8(SdfLayerHandle.getCPtr(rootLayer), ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_9(SdfLayerHandle.getCPtr(rootLayer), ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_10(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage Open(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Open__SWIG_11(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_4(SdfLayerHandle.getCPtr(rootLayer), UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_5(SdfLayerHandle.getCPtr(rootLayer), UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_6(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_7(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, ArResolverContext pathResolverContext, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_8(SdfLayerHandle.getCPtr(rootLayer), ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, ArResolverContext pathResolverContext, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_9(SdfLayerHandle.getCPtr(rootLayer), ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext, UsdStagePopulationMask mask, UsdStage.InitialLoadSet load) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_10(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask), (int)load);
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStage OpenMasked(SdfLayerHandle rootLayer, SdfLayerHandle sessionLayer, ArResolverContext pathResolverContext, UsdStagePopulationMask mask) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_OpenMasked__SWIG_11(SdfLayerHandle.getCPtr(rootLayer), SdfLayerHandle.getCPtr(sessionLayer), ArResolverContext.getCPtr(pathResolverContext), UsdStagePopulationMask.getCPtr(mask));
    UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Reload() {
    USDIPCPINVOKE.UsdStage_Reload(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool IsSupportedFile(string filePath) {
    bool ret = USDIPCPINVOKE.UsdStage_IsSupportedFile(filePath);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Save() {
    USDIPCPINVOKE.UsdStage_Save(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SaveSessionLayers() {
    USDIPCPINVOKE.UsdStage_SaveSessionLayers(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_PcpVariantFallbackMap GetGlobalVariantFallbacks() {
    SWIGTYPE_p_PcpVariantFallbackMap ret = new SWIGTYPE_p_PcpVariantFallbackMap(USDIPCPINVOKE.UsdStage_GetGlobalVariantFallbacks(), true);
    return ret;
  }

  public static void SetGlobalVariantFallbacks(SWIGTYPE_p_PcpVariantFallbackMap fallbacks) {
    USDIPCPINVOKE.UsdStage_SetGlobalVariantFallbacks(SWIGTYPE_p_PcpVariantFallbackMap.getCPtr(fallbacks));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdPrim Load(SdfPath path, UsdLoadPolicy policy) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_Load__SWIG_0(swigCPtr, SdfPath.getCPtr(path), (int)policy), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim Load(SdfPath path) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_Load__SWIG_1(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim Load() {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_Load__SWIG_2(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Unload(SdfPath path) {
    USDIPCPINVOKE.UsdStage_Unload__SWIG_0(swigCPtr, SdfPath.getCPtr(path));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Unload() {
    USDIPCPINVOKE.UsdStage_Unload__SWIG_1(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void LoadAndUnload(SWIGTYPE_p_std__setT_SdfPath_t loadSet, SWIGTYPE_p_std__setT_SdfPath_t unloadSet, UsdLoadPolicy policy) {
    USDIPCPINVOKE.UsdStage_LoadAndUnload__SWIG_0(swigCPtr, SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(loadSet), SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(unloadSet), (int)policy);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void LoadAndUnload(SWIGTYPE_p_std__setT_SdfPath_t loadSet, SWIGTYPE_p_std__setT_SdfPath_t unloadSet) {
    USDIPCPINVOKE.UsdStage_LoadAndUnload__SWIG_1(swigCPtr, SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(loadSet), SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(unloadSet));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__setT_SdfPath_t GetLoadSet() {
    SWIGTYPE_p_std__setT_SdfPath_t ret = new SWIGTYPE_p_std__setT_SdfPath_t(USDIPCPINVOKE.UsdStage_GetLoadSet(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__setT_SdfPath_t FindLoadable(SdfPath rootPath) {
    SWIGTYPE_p_std__setT_SdfPath_t ret = new SWIGTYPE_p_std__setT_SdfPath_t(USDIPCPINVOKE.UsdStage_FindLoadable__SWIG_0(swigCPtr, SdfPath.getCPtr(rootPath)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__setT_SdfPath_t FindLoadable() {
    SWIGTYPE_p_std__setT_SdfPath_t ret = new SWIGTYPE_p_std__setT_SdfPath_t(USDIPCPINVOKE.UsdStage_FindLoadable__SWIG_1(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdStagePopulationMask GetPopulationMask() {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStage_GetPopulationMask(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetPopulationMask(UsdStagePopulationMask mask) {
    USDIPCPINVOKE.UsdStage_SetPopulationMask(swigCPtr, UsdStagePopulationMask.getCPtr(mask));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdPrim GetPseudoRoot() {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_GetPseudoRoot(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim GetDefaultPrim() {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_GetDefaultPrim(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetDefaultPrim(UsdPrim prim) {
    USDIPCPINVOKE.UsdStage_SetDefaultPrim(swigCPtr, UsdPrim.getCPtr(prim));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ClearDefaultPrim() {
    USDIPCPINVOKE.UsdStage_ClearDefaultPrim(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool HasDefaultPrim() {
    bool ret = USDIPCPINVOKE.UsdStage_HasDefaultPrim(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim GetPrimAtPath(SdfPath path) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_GetPrimAtPath(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdObject GetObjectAtPath(SdfPath path) {
    UsdObject ret = new UsdObject(USDIPCPINVOKE.UsdStage_GetObjectAtPath(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimRange Traverse() {
    UsdPrimRange ret = new UsdPrimRange(USDIPCPINVOKE.UsdStage_Traverse__SWIG_0(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimRange Traverse(Usd_PrimFlagsPredicate predicate) {
    UsdPrimRange ret = new UsdPrimRange(USDIPCPINVOKE.UsdStage_Traverse__SWIG_1(swigCPtr, Usd_PrimFlagsPredicate.getCPtr(predicate)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimRange TraverseAll() {
    UsdPrimRange ret = new UsdPrimRange(USDIPCPINVOKE.UsdStage_TraverseAll(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim OverridePrim(SdfPath path) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_OverridePrim(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim DefinePrim(SdfPath path, TfToken typeName) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_DefinePrim__SWIG_0(swigCPtr, SdfPath.getCPtr(path), TfToken.getCPtr(typeName)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim DefinePrim(SdfPath path) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_DefinePrim__SWIG_1(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrim CreateClassPrim(SdfPath rootPrimPath) {
    UsdPrim ret = new UsdPrim(USDIPCPINVOKE.UsdStage_CreateClassPrim(swigCPtr, SdfPath.getCPtr(rootPrimPath)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool RemovePrim(SdfPath path) {
    bool ret = USDIPCPINVOKE.UsdStage_RemovePrim(swigCPtr, SdfPath.getCPtr(path));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandle GetSessionLayer() {
    SdfLayerHandle ret = new SdfLayerHandle(USDIPCPINVOKE.UsdStage_GetSessionLayer(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandle GetRootLayer() {
    SdfLayerHandle ret = new SdfLayerHandle(USDIPCPINVOKE.UsdStage_GetRootLayer(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ArResolverContext GetPathResolverContext() {
    ArResolverContext ret = new ArResolverContext(USDIPCPINVOKE.UsdStage_GetPathResolverContext(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string ResolveIdentifierToEditTarget(string identifier) {
    string ret = USDIPCPINVOKE.UsdStage_ResolveIdentifierToEditTarget(swigCPtr, identifier);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandleVector GetLayerStack(bool includeSessionLayers) {
    SdfLayerHandleVector ret = new SdfLayerHandleVector(USDIPCPINVOKE.UsdStage_GetLayerStack__SWIG_0(swigCPtr, includeSessionLayers), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandleVector GetLayerStack() {
    SdfLayerHandleVector ret = new SdfLayerHandleVector(USDIPCPINVOKE.UsdStage_GetLayerStack__SWIG_1(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandleVector GetUsedLayers(bool includeClipLayers) {
    SdfLayerHandleVector ret = new SdfLayerHandleVector(USDIPCPINVOKE.UsdStage_GetUsedLayers__SWIG_0(swigCPtr, includeClipLayers), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayerHandleVector GetUsedLayers() {
    SdfLayerHandleVector ret = new SdfLayerHandleVector(USDIPCPINVOKE.UsdStage_GetUsedLayers__SWIG_1(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasLocalLayer(SdfLayerHandle layer) {
    bool ret = USDIPCPINVOKE.UsdStage_HasLocalLayer(swigCPtr, SdfLayerHandle.getCPtr(layer));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdEditTarget GetEditTarget() {
    UsdEditTarget ret = new UsdEditTarget(USDIPCPINVOKE.UsdStage_GetEditTarget(swigCPtr), false);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdEditTarget GetEditTargetForLocalLayer(uint i) {
    UsdEditTarget ret = new UsdEditTarget(USDIPCPINVOKE.UsdStage_GetEditTargetForLocalLayer__SWIG_0(swigCPtr, i), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdEditTarget GetEditTargetForLocalLayer(SdfLayerHandle layer) {
    UsdEditTarget ret = new UsdEditTarget(USDIPCPINVOKE.UsdStage_GetEditTargetForLocalLayer__SWIG_1(swigCPtr, SdfLayerHandle.getCPtr(layer)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetEditTarget(UsdEditTarget editTarget) {
    USDIPCPINVOKE.UsdStage_SetEditTarget(swigCPtr, UsdEditTarget.getCPtr(editTarget));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void MuteLayer(string layerIdentifier) {
    USDIPCPINVOKE.UsdStage_MuteLayer(swigCPtr, layerIdentifier);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void UnmuteLayer(string layerIdentifier) {
    USDIPCPINVOKE.UsdStage_UnmuteLayer(swigCPtr, layerIdentifier);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void MuteAndUnmuteLayers(StdStringVector muteLayers, StdStringVector unmuteLayers) {
    USDIPCPINVOKE.UsdStage_MuteAndUnmuteLayers(swigCPtr, StdStringVector.getCPtr(muteLayers), StdStringVector.getCPtr(unmuteLayers));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public StdStringVector GetMutedLayers() {
    StdStringVector ret = new StdStringVector(USDIPCPINVOKE.UsdStage_GetMutedLayers(swigCPtr), false);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsLayerMuted(string layerIdentifier) {
    bool ret = USDIPCPINVOKE.UsdStage_IsLayerMuted(swigCPtr, layerIdentifier);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Export(string filename, bool addSourceFileComment, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t args) {
    bool ret = USDIPCPINVOKE.UsdStage_Export__SWIG_0(swigCPtr, filename, addSourceFileComment, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(args));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Export(string filename, bool addSourceFileComment) {
    bool ret = USDIPCPINVOKE.UsdStage_Export__SWIG_1(swigCPtr, filename, addSourceFileComment);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Export(string filename) {
    bool ret = USDIPCPINVOKE.UsdStage_Export__SWIG_2(swigCPtr, filename);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ExportToString(/*cstype*/ out string result, bool addSourceFileComment) {
    bool ret = USDIPCPINVOKE.UsdStage_ExportToString__SWIG_0(swigCPtr, out result, addSourceFileComment);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ExportToString(/*cstype*/ out string result) {
    bool ret = USDIPCPINVOKE.UsdStage_ExportToString__SWIG_1(swigCPtr, out result);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayer Flatten(bool addSourceFileComment) {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Flatten__SWIG_0(swigCPtr, addSourceFileComment);
    SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfLayer Flatten() {
    global::System.IntPtr cPtr = USDIPCPINVOKE.UsdStage_Flatten__SWIG_1(swigCPtr);
    SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetMetadata(TfToken key, VtValue value) {
    bool ret = USDIPCPINVOKE.UsdStage_GetMetadata(swigCPtr, TfToken.getCPtr(key), VtValue.getCPtr(value));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasMetadata(TfToken key) {
    bool ret = USDIPCPINVOKE.UsdStage_HasMetadata(swigCPtr, TfToken.getCPtr(key));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasAuthoredMetadata(TfToken key) {
    bool ret = USDIPCPINVOKE.UsdStage_HasAuthoredMetadata(swigCPtr, TfToken.getCPtr(key));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool SetMetadata(TfToken key, VtValue value) {
    bool ret = USDIPCPINVOKE.UsdStage_SetMetadata(swigCPtr, TfToken.getCPtr(key), VtValue.getCPtr(value));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ClearMetadata(TfToken key) {
    bool ret = USDIPCPINVOKE.UsdStage_ClearMetadata(swigCPtr, TfToken.getCPtr(key));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetMetadataByDictKey(TfToken key, TfToken keyPath, VtValue value) {
    bool ret = USDIPCPINVOKE.UsdStage_GetMetadataByDictKey(swigCPtr, TfToken.getCPtr(key), TfToken.getCPtr(keyPath), VtValue.getCPtr(value));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasMetadataDictKey(TfToken key, TfToken keyPath) {
    bool ret = USDIPCPINVOKE.UsdStage_HasMetadataDictKey(swigCPtr, TfToken.getCPtr(key), TfToken.getCPtr(keyPath));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool HasAuthoredMetadataDictKey(TfToken key, TfToken keyPath) {
    bool ret = USDIPCPINVOKE.UsdStage_HasAuthoredMetadataDictKey(swigCPtr, TfToken.getCPtr(key), TfToken.getCPtr(keyPath));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool SetMetadataByDictKey(TfToken key, TfToken keyPath, VtValue value) {
    bool ret = USDIPCPINVOKE.UsdStage_SetMetadataByDictKey(swigCPtr, TfToken.getCPtr(key), TfToken.getCPtr(keyPath), VtValue.getCPtr(value));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ClearMetadataByDictKey(TfToken key, TfToken keyPath) {
    bool ret = USDIPCPINVOKE.UsdStage_ClearMetadataByDictKey(swigCPtr, TfToken.getCPtr(key), TfToken.getCPtr(keyPath));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetStartTimeCode() {
    double ret = USDIPCPINVOKE.UsdStage_GetStartTimeCode(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetStartTimeCode(double arg0) {
    USDIPCPINVOKE.UsdStage_SetStartTimeCode(swigCPtr, arg0);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public double GetEndTimeCode() {
    double ret = USDIPCPINVOKE.UsdStage_GetEndTimeCode(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetEndTimeCode(double arg0) {
    USDIPCPINVOKE.UsdStage_SetEndTimeCode(swigCPtr, arg0);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool HasAuthoredTimeCodeRange() {
    bool ret = USDIPCPINVOKE.UsdStage_HasAuthoredTimeCodeRange(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetTimeCodesPerSecond() {
    double ret = USDIPCPINVOKE.UsdStage_GetTimeCodesPerSecond(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetTimeCodesPerSecond(double timeCodesPerSecond) {
    USDIPCPINVOKE.UsdStage_SetTimeCodesPerSecond(swigCPtr, timeCodesPerSecond);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public double GetFramesPerSecond() {
    double ret = USDIPCPINVOKE.UsdStage_GetFramesPerSecond(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetFramesPerSecond(double framesPerSecond) {
    USDIPCPINVOKE.UsdStage_SetFramesPerSecond(swigCPtr, framesPerSecond);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetColorConfiguration(SdfAssetPath colorConfig) {
    USDIPCPINVOKE.UsdStage_SetColorConfiguration(swigCPtr, SdfAssetPath.getCPtr(colorConfig));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public SdfAssetPath GetColorConfiguration() {
    SdfAssetPath ret = new SdfAssetPath(USDIPCPINVOKE.UsdStage_GetColorConfiguration(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetColorManagementSystem(TfToken cms) {
    USDIPCPINVOKE.UsdStage_SetColorManagementSystem(swigCPtr, TfToken.getCPtr(cms));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public TfToken GetColorManagementSystem() {
    TfToken ret = new TfToken(USDIPCPINVOKE.UsdStage_GetColorManagementSystem(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void GetColorConfigFallbacks(SdfAssetPath colorConfiguration, TfToken colorManagementSystem) {
    USDIPCPINVOKE.UsdStage_GetColorConfigFallbacks(SdfAssetPath.getCPtr(colorConfiguration), TfToken.getCPtr(colorManagementSystem));
  }

  public static void SetColorConfigFallbacks(SdfAssetPath colorConfiguration, TfToken colorManagementSystem) {
    USDIPCPINVOKE.UsdStage_SetColorConfigFallbacks(SdfAssetPath.getCPtr(colorConfiguration), TfToken.getCPtr(colorManagementSystem));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetInterpolationType(UsdInterpolationType interpolationType) {
    USDIPCPINVOKE.UsdStage_SetInterpolationType(swigCPtr, (int)interpolationType);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdInterpolationType GetInterpolationType() {
    UsdInterpolationType ret = (UsdInterpolationType)USDIPCPINVOKE.UsdStage_GetInterpolationType(swigCPtr);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimVector GetMasters() {
    UsdPrimVector ret = new UsdPrimVector(USDIPCPINVOKE.UsdStage_GetMasters(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimVector GetAllPrims() {
    UsdPrimVector ret = new UsdPrimVector(USDIPCPINVOKE.UsdStage_GetAllPrims(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdPrimVector GetAllPrimsByType(string typeName) {
    UsdPrimVector ret = new UsdPrimVector(USDIPCPINVOKE.UsdStage_GetAllPrimsByType(swigCPtr, typeName), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfPathVector GetAllPaths() {
    SdfPathVector ret = new SdfPathVector(USDIPCPINVOKE.UsdStage_GetAllPaths(swigCPtr), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfPathVector GetAllPathsByType(string typeName) {
    SdfPathVector ret = new SdfPathVector(USDIPCPINVOKE.UsdStage_GetAllPathsByType(swigCPtr, typeName), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum InitialLoadSet {
    LoadAll,
    LoadNone
  }

}

}
