/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_UsdCs_WRAP_H_
#define SWIG_UsdCs_WRAP_H_

class SwigDirector_DiagnosticHandler : public DiagnosticHandler, public Swig::Director {

public:
    SwigDirector_DiagnosticHandler();
    virtual ~SwigDirector_DiagnosticHandler();
    virtual void OnInfo(char const *msg);
    virtual void OnWarning(char const *msg);
    virtual void OnError(char const *msg);
    virtual void OnFatalError(char const *msg);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(char *);
    void swig_connect_director(SWIG_Callback0_t callbackOnInfo, SWIG_Callback1_t callbackOnWarning, SWIG_Callback2_t callbackOnError, SWIG_Callback3_t callbackOnFatalError);

private:
    SWIG_Callback0_t swig_callbackOnInfo;
    SWIG_Callback1_t swig_callbackOnWarning;
    SWIG_Callback2_t swig_callbackOnError;
    SWIG_Callback3_t swig_callbackOnFatalError;
    void swig_init_callbacks();
};

class SwigDirector_TaskCallback : public TaskCallback, public Swig::Director {

public:
    SwigDirector_TaskCallback();
    virtual ~SwigDirector_TaskCallback();
    virtual void Run(size_t start, size_t end);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(unsigned long, unsigned long);
    void swig_connect_director(SWIG_Callback0_t callbackRun);

private:
    SWIG_Callback0_t swig_callbackRun;
    void swig_init_callbacks();
};


#endif
