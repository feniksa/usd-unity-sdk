//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdStagePopulationMask : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UsdStagePopulationMask(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdStagePopulationMask obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UsdStagePopulationMask() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          USDIPCPINVOKE.delete_UsdStagePopulationMask(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static UsdStagePopulationMask All() {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_All(), true);
    return ret;
  }

  public UsdStagePopulationMask() : this(USDIPCPINVOKE.new_UsdStagePopulationMask__SWIG_0(), true) {
  }

  public UsdStagePopulationMask(UsdStagePopulationMask arg0) : this(USDIPCPINVOKE.new_UsdStagePopulationMask__SWIG_1(UsdStagePopulationMask.getCPtr(arg0)), true) {
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdStagePopulationMask(SdfPathVector paths) : this(USDIPCPINVOKE.new_UsdStagePopulationMask__SWIG_4(SdfPathVector.getCPtr(paths)), true) {
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

  public static UsdStagePopulationMask Union(UsdStagePopulationMask l, UsdStagePopulationMask r) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_Union(UsdStagePopulationMask.getCPtr(l), UsdStagePopulationMask.getCPtr(r)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdStagePopulationMask GetUnion(UsdStagePopulationMask other) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_GetUnion__SWIG_0(swigCPtr, UsdStagePopulationMask.getCPtr(other)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdStagePopulationMask GetUnion(SdfPath path) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_GetUnion__SWIG_1(swigCPtr, SdfPath.getCPtr(path)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdStagePopulationMask Intersection(UsdStagePopulationMask l, UsdStagePopulationMask r) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_Intersection(UsdStagePopulationMask.getCPtr(l), UsdStagePopulationMask.getCPtr(r)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdStagePopulationMask GetIntersection(UsdStagePopulationMask other) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_GetIntersection(swigCPtr, UsdStagePopulationMask.getCPtr(other)), true);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Includes(UsdStagePopulationMask other) {
    bool ret = USDIPCPINVOKE.UsdStagePopulationMask_Includes__SWIG_0(swigCPtr, UsdStagePopulationMask.getCPtr(other));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Includes(SdfPath path) {
    bool ret = USDIPCPINVOKE.UsdStagePopulationMask_Includes__SWIG_1(swigCPtr, SdfPath.getCPtr(path));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IncludesSubtree(SdfPath path) {
    bool ret = USDIPCPINVOKE.UsdStagePopulationMask_IncludesSubtree(swigCPtr, SdfPath.getCPtr(path));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsEmpty() {
    bool ret = USDIPCPINVOKE.UsdStagePopulationMask_IsEmpty(swigCPtr);
    return ret;
  }

  public bool GetIncludedChildNames(SdfPath path, TfTokenVector childNames) {
    bool ret = USDIPCPINVOKE.UsdStagePopulationMask_GetIncludedChildNames(swigCPtr, SdfPath.getCPtr(path), TfTokenVector.getCPtr(childNames));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SdfPathVector GetPaths() {
    SdfPathVector ret = new SdfPathVector(USDIPCPINVOKE.UsdStagePopulationMask_GetPaths(swigCPtr), true);
    return ret;
  }

  public UsdStagePopulationMask Add(UsdStagePopulationMask other) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_Add__SWIG_0(swigCPtr, UsdStagePopulationMask.getCPtr(other)), false);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdStagePopulationMask Add(SdfPath path) {
    UsdStagePopulationMask ret = new UsdStagePopulationMask(USDIPCPINVOKE.UsdStagePopulationMask_Add__SWIG_1(swigCPtr, SdfPath.getCPtr(path)), false);
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(UsdStagePopulationMask other) {
    USDIPCPINVOKE.UsdStagePopulationMask_swap(swigCPtr, UsdStagePopulationMask.getCPtr(other));
    if (USDIPCPINVOKE.SWIGPendingException.Pending) throw USDIPCPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
